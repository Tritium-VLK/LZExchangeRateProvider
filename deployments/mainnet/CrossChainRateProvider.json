{
  "address": "0xaD78CD17D3A4a3dc6afb203ef91C0E54433b3b9d",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newDstChainId",
          "type": "uint16"
        }
      ],
      "name": "DstChainIdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLayerZeroEndpoint",
          "type": "address"
        }
      ],
      "name": "LayerZeroEndpointUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newRateReceiver",
          "type": "address"
        }
      ],
      "name": "RateReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "RateUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dstChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rateReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        }
      ],
      "name": "updateDstChainId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroEndpoint",
          "type": "address"
        }
      ],
      "name": "updateLayerZeroEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateRate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rateReceiver",
          "type": "address"
        }
      ],
      "name": "updateRateReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6d8f99c314b5a1d965653bccd90723dda8f223d07d92e100a53a8036f98bdfb3",
  "receipt": {
    "to": null,
    "from": "0x4643CCf56721Ea65B03F2bd899231C828A21d314",
    "contractAddress": "0xaD78CD17D3A4a3dc6afb203ef91C0E54433b3b9d",
    "transactionIndex": 109,
    "gasUsed": "816189",
    "logsBloom": "0x
    "blockHash": "0xbd43ec4f8441b2a6e0c0a1086976738c049c15fac384a2643473d4bbbf3cfc4b",
    "transactionHash": "0x6d8f99c314b5a1d965653bccd90723dda8f223d07d92e100a53a8036f98bdfb3",
    "logs": [
      {
        "transactionIndex": 109,
        "blockNumber": 17293872,
        "transactionHash": "0x6d8f99c314b5a1d965653bccd90723dda8f223d07d92e100a53a8036f98bdfb3",
        "address": "0xaD78CD17D3A4a3dc6afb203ef91C0E54433b3b9d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004643ccf56721ea65b03f2bd899231c828a21d314"
        ],
        "data": "0x",
        "logIndex": 271,
        "blockHash": "0xbd43ec4f8441b2a6e0c0a1086976738c049c15fac384a2643473d4bbbf3cfc4b"
      }
    ],
    "blockNumber": 17293872,
    "cumulativeGasUsed": "18397908",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "18706f8dcd16afaaf1520075c49bbeff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDstChainId\",\"type\":\"uint16\"}],\"name\":\"DstChainIdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLayerZeroEndpoint\",\"type\":\"address\"}],\"name\":\"LayerZeroEndpointUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRateReceiver\",\"type\":\"address\"}],\"name\":\"RateReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dstChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"}],\"name\":\"updateDstChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroEndpoint\",\"type\":\"address\"}],\"name\":\"updateLayerZeroEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rateReceiver\",\"type\":\"address\"}],\"name\":\"updateRateReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"witherblock\",\"details\":\"Powered using LayerZero\",\"events\":{\"DstChainIdUpdated(uint16)\":{\"params\":{\"newDstChainId\":\"the destination chainId that was updated\"}},\"LayerZeroEndpointUpdated(address)\":{\"params\":{\"newLayerZeroEndpoint\":\"the LayerZero Endpoint address that was updated\"}},\"RateReceiverUpdated(address)\":{\"params\":{\"newRateReceiver\":\"the RateReceiver address that was updated\"}},\"RateUpdated(uint256)\":{\"params\":{\"newRate\":\"the rate that was updated\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateDstChainId(uint16)\":{\"details\":\"Can only be called by owner\",\"params\":{\"_dstChainId\":\"the destination chainId\"}},\"updateLayerZeroEndpoint(address)\":{\"details\":\"Can only be called by owner\",\"params\":{\"_layerZeroEndpoint\":\"the new layer zero endpoint address\"}},\"updateRateReceiver(address)\":{\"details\":\"Can only be called by owner\",\"params\":{\"_rateReceiver\":\"the new rate receiver address\"}}},\"title\":\"Cross chain rate provider\",\"version\":1},\"userdoc\":{\"events\":{\"DstChainIdUpdated(uint16)\":{\"notice\":\"Emitted when the destination chainId is updated\"},\"LayerZeroEndpointUpdated(address)\":{\"notice\":\"Emitted when LayerZero Endpoint is updated\"},\"RateReceiverUpdated(address)\":{\"notice\":\"Emitted when RateReceiver is updated\"},\"RateUpdated(uint256)\":{\"notice\":\"Emitted when rate is updated\"}},\"kind\":\"user\",\"methods\":{\"dstChainId()\":{\"notice\":\"Destination chainId\"},\"getLatestRate()\":{\"notice\":\"Returns the latest rate from wstETH contract\"},\"lastUpdated()\":{\"notice\":\"Last time rate was updated.\"},\"layerZeroEndpoint()\":{\"notice\":\"LayerZero endpoint address.\"},\"rate()\":{\"notice\":\"Last rate updated on the receiver. Not guaranteed as updates can be dropped.\"},\"rateReceiver()\":{\"notice\":\"Rate Reciever address address.\"},\"updateDstChainId(uint16)\":{\"notice\":\"Updates the destination chainId\"},\"updateLayerZeroEndpoint(address)\":{\"notice\":\"Updates the LayerZero Endpoint address\"},\"updateRate()\":{\"notice\":\"Updates rate in this contract and on the receiver\"},\"updateRateReceiver(address)\":{\"notice\":\"Updates the RateReceiver address\"}},\"notice\":\"Provides a rate to a receiver contract on a different chain than the one this contract is deployed on\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrossChainRateProvider.sol\":\"CrossChainRateProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CrossChainRateProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport {ILayerZeroEndpoint} from \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport {IWstETH} from \\\"./interfaces/IWstETH.sol\\\";\\n\\n/// @title Cross chain rate provider\\n/// @author witherblock\\n/// @notice Provides a rate to a receiver contract on a different chain than the one this contract is deployed on\\n/// @dev Powered using LayerZero\\ncontract CrossChainRateProvider is Ownable {\\n    /// @notice Last rate updated on the receiver. Not guaranteed as updates can be dropped.\\n    uint256 public rate;\\n\\n    /// @notice Last time rate was updated.\\n    uint256 public lastUpdated;\\n\\n    /// @notice Destination chainId\\n    uint16 public dstChainId;\\n\\n    /// @notice LayerZero endpoint address.\\n    address public layerZeroEndpoint;\\n\\n    /// @notice Rate Reciever address address.\\n    address public rateReceiver;\\n\\n    /// @notice Emitted when rate is updated\\n    /// @param newRate the rate that was updated\\n    event RateUpdated(uint256 newRate);\\n\\n    /// @notice Emitted when LayerZero Endpoint is updated\\n    /// @param newLayerZeroEndpoint the LayerZero Endpoint address that was updated\\n    event LayerZeroEndpointUpdated(address newLayerZeroEndpoint);\\n\\n    /// @notice Emitted when RateReceiver is updated\\n    /// @param newRateReceiver the RateReceiver address that was updated\\n    event RateReceiverUpdated(address newRateReceiver);\\n\\n    /// @notice Emitted when the destination chainId is updated\\n    /// @param newDstChainId the destination chainId that was updated\\n    event DstChainIdUpdated(uint16 newDstChainId);\\n\\n    /// @notice Updates the LayerZero Endpoint address\\n    /// @dev Can only be called by owner\\n    /// @param _layerZeroEndpoint the new layer zero endpoint address\\n    function updateLayerZeroEndpoint(\\n        address _layerZeroEndpoint\\n    ) external onlyOwner {\\n        layerZeroEndpoint = _layerZeroEndpoint;\\n\\n        emit LayerZeroEndpointUpdated(_layerZeroEndpoint);\\n    }\\n\\n    /// @notice Updates the RateReceiver address\\n    /// @dev Can only be called by owner\\n    /// @param _rateReceiver the new rate receiver address\\n    function updateRateReceiver(address _rateReceiver) external onlyOwner {\\n        rateReceiver = _rateReceiver;\\n\\n        emit RateReceiverUpdated(_rateReceiver);\\n    }\\n\\n    /// @notice Updates the destination chainId\\n    /// @dev Can only be called by owner\\n    /// @param _dstChainId the destination chainId\\n    function updateDstChainId(uint16 _dstChainId) external onlyOwner {\\n        dstChainId = _dstChainId;\\n\\n        emit DstChainIdUpdated(_dstChainId);\\n    }\\n\\n    /// @notice Updates rate in this contract and on the receiver\\n    function updateRate() external payable {\\n        uint256 latestRate = getLatestRate();\\n\\n        bytes memory remoteAndLocalAddresses = abi.encodePacked(\\n            rateReceiver,\\n            address(this)\\n        );\\n\\n        rate = latestRate;\\n\\n        lastUpdated = block.timestamp;\\n\\n        bytes memory _payload = abi.encode(latestRate);\\n\\n        ILayerZeroEndpoint(layerZeroEndpoint).send{value: msg.value}(\\n            dstChainId,\\n            remoteAndLocalAddresses,\\n            _payload,\\n            payable(msg.sender),\\n            address(0x0),\\n            bytes(\\\"\\\")\\n        );\\n\\n        emit RateUpdated(rate);\\n    }\\n\\n    /// @notice Returns the latest rate from wstETH contract\\n    function getLatestRate() public view returns (uint256) {\\n        return\\n            IWstETH(0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0).stEthPerToken();\\n    }\\n}\\n\",\"keccak256\":\"0x4b182796a02a35e0688d0c1a5d52cd48e004a7974dad2bf2499000ae0cba0b2d\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress\\n    ) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(\\n        uint16 _dstChainId,\\n        address _srcAddress\\n    ) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress\\n    ) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(\\n        address _userApplication\\n    ) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(\\n        address _userApplication\\n    ) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(\\n        address _userApplication\\n    ) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(\\n        address _userApplication\\n    ) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0x53ec2955326ce0dacfc527af78c8cd95f6534f9a54d391afc7524ea3a79061fd\",\"license\":\"MIT\"},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6369f787e306116aa46540e31a8da3f589ede506b2d41ba344ce617ecf331a5b\",\"license\":\"MIT\"},\"contracts/interfaces/IWstETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IWstETH {\\n    function stEthPerToken() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x3417feab59b24d146bcfe9941825ffe6b4c36dc299adaa547dcc4792983dc4a0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d528061010d6000396000f3fe6080604052600436106100c25760003560e01c8063715018a61161007f578063c7fee63e11610059578063c7fee63e14610230578063d0b06f5d1461023a578063e1e7ff7714610265578063f2fde38b14610290576100c2565b8063715018a6146101c35780638409c02d146101da5780638da5cb5b14610205576100c2565b806307968db1146100c75780632c4e722e146100f257806330c593f71461011d57806343b09696146101485780634a7f931e146101715780636d5074f31461019a575b600080fd5b3480156100d357600080fd5b506100dc6102b9565b6040516100e991906108db565b60405180910390f35b3480156100fe57600080fd5b506101076102df565b604051610114919061090f565b60405180910390f35b34801561012957600080fd5b506101326102e5565b60405161013f9190610947565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610993565b6102f9565b005b34801561017d57600080fd5b50610198600480360381019061019391906109ec565b610358565b005b3480156101a657600080fd5b506101c160048036038101906101bc91906109ec565b6103db565b005b3480156101cf57600080fd5b506101d861045e565b005b3480156101e657600080fd5b506101ef610472565b6040516101fc91906108db565b60405180910390f35b34801561021157600080fd5b5061021a610498565b60405161022791906108db565b60405180910390f35b6102386104c1565b005b34801561024657600080fd5b5061024f61063d565b60405161025c919061090f565b60405180910390f35b34801561027157600080fd5b5061027a610643565b604051610287919061090f565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b291906109ec565b6106cd565b005b600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600360009054906101000a900461ffff1681565b610301610750565b80600360006101000a81548161ffff021916908361ffff1602179055507f02d97213a69adb7e990b3889ee1e5a35a5311c573b5edff7195f666f29fcbc148160405161034d9190610947565b60405180910390a150565b610360610750565b80600360026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f07ac75b380fe4c5e41ea9b7030179bb21229b84ab9f9ba2fabebccd430ae2f6d816040516103d091906108db565b60405180910390a150565b6103e3610750565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f68465609e5e89ba7ff8a874559f044ca413aba0312e4534e1b43d1e51887d8d38160405161045391906108db565b60405180910390a150565b610466610750565b61047060006107ce565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006104cb610643565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051602001610504929190610a61565b60405160208183030381529060405290508160018190555042600281905550600082604051602001610536919061090f565b6040516020818303038152906040529050600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c580310034600360009054906101000a900461ffff168585336000604051806020016040528060008152506040518863ffffffff1660e01b81526004016105cd96959493929190610b3e565b6000604051808303818588803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b50505050507fe65c987b2e4668e09ba867026921588005b2b2063607a1e7e7d91683c8f91b7b600154604051610630919061090f565b60405180910390a1505050565b60025481565b6000737f39c581f595b53c5cb19bd0b3f8da6c935e2ca073ffffffffffffffffffffffffffffffffffffffff1663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190610be0565b905090565b6106d5610750565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90610c90565b60405180910390fd5b61074d816107ce565b50565b610758610892565b73ffffffffffffffffffffffffffffffffffffffff16610776610498565b73ffffffffffffffffffffffffffffffffffffffff16146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c390610cfc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c58261089a565b9050919050565b6108d5816108ba565b82525050565b60006020820190506108f060008301846108cc565b92915050565b6000819050919050565b610909816108f6565b82525050565b60006020820190506109246000830184610900565b92915050565b600061ffff82169050919050565b6109418161092a565b82525050565b600060208201905061095c6000830184610938565b92915050565b600080fd5b6109708161092a565b811461097b57600080fd5b50565b60008135905061098d81610967565b92915050565b6000602082840312156109a9576109a8610962565b5b60006109b78482850161097e565b91505092915050565b6109c9816108ba565b81146109d457600080fd5b50565b6000813590506109e6816109c0565b92915050565b600060208284031215610a0257610a01610962565b5b6000610a10848285016109d7565b91505092915050565b60008160601b9050919050565b6000610a3182610a19565b9050919050565b6000610a4382610a26565b9050919050565b610a5b610a56826108ba565b610a38565b82525050565b6000610a6d8285610a4a565b601482019150610a7d8284610a4a565b6014820191508190509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac7578082015181840152602081019050610aac565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aef82610a8d565b610af98185610a98565b9350610b09818560208601610aa9565b610b1281610ad3565b840191505092915050565b6000610b288261089a565b9050919050565b610b3881610b1d565b82525050565b600060c082019050610b536000830189610938565b8181036020830152610b658188610ae4565b90508181036040830152610b798187610ae4565b9050610b886060830186610b2f565b610b9560808301856108cc565b81810360a0830152610ba78184610ae4565b9050979650505050505050565b610bbd816108f6565b8114610bc857600080fd5b50565b600081519050610bda81610bb4565b92915050565b600060208284031215610bf657610bf5610962565b5b6000610c0484828501610bcb565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c7a602683610c0d565b9150610c8582610c1e565b604082019050919050565b60006020820190508181036000830152610ca981610c6d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610ce6602083610c0d565b9150610cf182610cb0565b602082019050919050565b60006020820190508181036000830152610d1581610cd9565b905091905056fea26469706673582212204363809957e1a6bbd6e585872f40209b474613e42e2979afea691b0b53562db964736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063715018a61161007f578063c7fee63e11610059578063c7fee63e14610230578063d0b06f5d1461023a578063e1e7ff7714610265578063f2fde38b14610290576100c2565b8063715018a6146101c35780638409c02d146101da5780638da5cb5b14610205576100c2565b806307968db1146100c75780632c4e722e146100f257806330c593f71461011d57806343b09696146101485780634a7f931e146101715780636d5074f31461019a575b600080fd5b3480156100d357600080fd5b506100dc6102b9565b6040516100e991906108db565b60405180910390f35b3480156100fe57600080fd5b506101076102df565b604051610114919061090f565b60405180910390f35b34801561012957600080fd5b506101326102e5565b60405161013f9190610947565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610993565b6102f9565b005b34801561017d57600080fd5b50610198600480360381019061019391906109ec565b610358565b005b3480156101a657600080fd5b506101c160048036038101906101bc91906109ec565b6103db565b005b3480156101cf57600080fd5b506101d861045e565b005b3480156101e657600080fd5b506101ef610472565b6040516101fc91906108db565b60405180910390f35b34801561021157600080fd5b5061021a610498565b60405161022791906108db565b60405180910390f35b6102386104c1565b005b34801561024657600080fd5b5061024f61063d565b60405161025c919061090f565b60405180910390f35b34801561027157600080fd5b5061027a610643565b604051610287919061090f565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b291906109ec565b6106cd565b005b600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600360009054906101000a900461ffff1681565b610301610750565b80600360006101000a81548161ffff021916908361ffff1602179055507f02d97213a69adb7e990b3889ee1e5a35a5311c573b5edff7195f666f29fcbc148160405161034d9190610947565b60405180910390a150565b610360610750565b80600360026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f07ac75b380fe4c5e41ea9b7030179bb21229b84ab9f9ba2fabebccd430ae2f6d816040516103d091906108db565b60405180910390a150565b6103e3610750565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f68465609e5e89ba7ff8a874559f044ca413aba0312e4534e1b43d1e51887d8d38160405161045391906108db565b60405180910390a150565b610466610750565b61047060006107ce565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006104cb610643565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051602001610504929190610a61565b60405160208183030381529060405290508160018190555042600281905550600082604051602001610536919061090f565b6040516020818303038152906040529050600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c580310034600360009054906101000a900461ffff168585336000604051806020016040528060008152506040518863ffffffff1660e01b81526004016105cd96959493929190610b3e565b6000604051808303818588803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b50505050507fe65c987b2e4668e09ba867026921588005b2b2063607a1e7e7d91683c8f91b7b600154604051610630919061090f565b60405180910390a1505050565b60025481565b6000737f39c581f595b53c5cb19bd0b3f8da6c935e2ca073ffffffffffffffffffffffffffffffffffffffff1663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190610be0565b905090565b6106d5610750565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90610c90565b60405180910390fd5b61074d816107ce565b50565b610758610892565b73ffffffffffffffffffffffffffffffffffffffff16610776610498565b73ffffffffffffffffffffffffffffffffffffffff16146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c390610cfc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c58261089a565b9050919050565b6108d5816108ba565b82525050565b60006020820190506108f060008301846108cc565b92915050565b6000819050919050565b610909816108f6565b82525050565b60006020820190506109246000830184610900565b92915050565b600061ffff82169050919050565b6109418161092a565b82525050565b600060208201905061095c6000830184610938565b92915050565b600080fd5b6109708161092a565b811461097b57600080fd5b50565b60008135905061098d81610967565b92915050565b6000602082840312156109a9576109a8610962565b5b60006109b78482850161097e565b91505092915050565b6109c9816108ba565b81146109d457600080fd5b50565b6000813590506109e6816109c0565b92915050565b600060208284031215610a0257610a01610962565b5b6000610a10848285016109d7565b91505092915050565b60008160601b9050919050565b6000610a3182610a19565b9050919050565b6000610a4382610a26565b9050919050565b610a5b610a56826108ba565b610a38565b82525050565b6000610a6d8285610a4a565b601482019150610a7d8284610a4a565b6014820191508190509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac7578082015181840152602081019050610aac565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aef82610a8d565b610af98185610a98565b9350610b09818560208601610aa9565b610b1281610ad3565b840191505092915050565b6000610b288261089a565b9050919050565b610b3881610b1d565b82525050565b600060c082019050610b536000830189610938565b8181036020830152610b658188610ae4565b90508181036040830152610b798187610ae4565b9050610b886060830186610b2f565b610b9560808301856108cc565b81810360a0830152610ba78184610ae4565b9050979650505050505050565b610bbd816108f6565b8114610bc857600080fd5b50565b600081519050610bda81610bb4565b92915050565b600060208284031215610bf657610bf5610962565b5b6000610c0484828501610bcb565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c7a602683610c0d565b9150610c8582610c1e565b604082019050919050565b60006020820190508181036000830152610ca981610c6d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610ce6602083610c0d565b9150610cf182610cb0565b602082019050919050565b60006020820190508181036000830152610d1581610cd9565b905091905056fea26469706673582212204363809957e1a6bbd6e585872f40209b474613e42e2979afea691b0b53562db964736f6c63430008120033",
  "devdoc": {
    "author": "witherblock",
    "details": "Powered using LayerZero",
    "events": {
      "DstChainIdUpdated(uint16)": {
        "params": {
          "newDstChainId": "the destination chainId that was updated"
        }
      },
      "LayerZeroEndpointUpdated(address)": {
        "params": {
          "newLayerZeroEndpoint": "the LayerZero Endpoint address that was updated"
        }
      },
      "RateReceiverUpdated(address)": {
        "params": {
          "newRateReceiver": "the RateReceiver address that was updated"
        }
      },
      "RateUpdated(uint256)": {
        "params": {
          "newRate": "the rate that was updated"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateDstChainId(uint16)": {
        "details": "Can only be called by owner",
        "params": {
          "_dstChainId": "the destination chainId"
        }
      },
      "updateLayerZeroEndpoint(address)": {
        "details": "Can only be called by owner",
        "params": {
          "_layerZeroEndpoint": "the new layer zero endpoint address"
        }
      },
      "updateRateReceiver(address)": {
        "details": "Can only be called by owner",
        "params": {
          "_rateReceiver": "the new rate receiver address"
        }
      }
    },
    "title": "Cross chain rate provider",
    "version": 1
  },
  "userdoc": {
    "events": {
      "DstChainIdUpdated(uint16)": {
        "notice": "Emitted when the destination chainId is updated"
      },
      "LayerZeroEndpointUpdated(address)": {
        "notice": "Emitted when LayerZero Endpoint is updated"
      },
      "RateReceiverUpdated(address)": {
        "notice": "Emitted when RateReceiver is updated"
      },
      "RateUpdated(uint256)": {
        "notice": "Emitted when rate is updated"
      }
    },
    "kind": "user",
    "methods": {
      "dstChainId()": {
        "notice": "Destination chainId"
      },
      "getLatestRate()": {
        "notice": "Returns the latest rate from wstETH contract"
      },
      "lastUpdated()": {
        "notice": "Last time rate was updated."
      },
      "layerZeroEndpoint()": {
        "notice": "LayerZero endpoint address."
      },
      "rate()": {
        "notice": "Last rate updated on the receiver. Not guaranteed as updates can be dropped."
      },
      "rateReceiver()": {
        "notice": "Rate Reciever address address."
      },
      "updateDstChainId(uint16)": {
        "notice": "Updates the destination chainId"
      },
      "updateLayerZeroEndpoint(address)": {
        "notice": "Updates the LayerZero Endpoint address"
      },
      "updateRate()": {
        "notice": "Updates rate in this contract and on the receiver"
      },
      "updateRateReceiver(address)": {
        "notice": "Updates the RateReceiver address"
      }
    },
    "notice": "Provides a rate to a receiver contract on a different chain than the one this contract is deployed on",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/CrossChainRateProvider.sol:CrossChainRateProvider",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 148,
        "contract": "contracts/CrossChainRateProvider.sol:CrossChainRateProvider",
        "label": "rate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 151,
        "contract": "contracts/CrossChainRateProvider.sol:CrossChainRateProvider",
        "label": "lastUpdated",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 154,
        "contract": "contracts/CrossChainRateProvider.sol:CrossChainRateProvider",
        "label": "dstChainId",
        "offset": 0,
        "slot": "3",
        "type": "t_uint16"
      },
      {
        "astId": 157,
        "contract": "contracts/CrossChainRateProvider.sol:CrossChainRateProvider",
        "label": "layerZeroEndpoint",
        "offset": 2,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 160,
        "contract": "contracts/CrossChainRateProvider.sol:CrossChainRateProvider",
        "label": "rateReceiver",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}